{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Wine Project: Data Analysis and Classification\n",
        "**Goal:** Apply machine learning models to classify wine based on chemical features.  \n",
        "**Tools:** Python, pandas, scikit-learn, matplotlib, seaborn.\n"
      ],
      "metadata": {
        "id": "tyU5YVNyNM9Q"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Load Dataset\n",
        "Import the dataset and take a first look at its structure.\n"
      ],
      "metadata": {
        "id": "kFW17dn1Nim2"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "xqpGsTmJZ-iS"
      },
      "outputs": [],
      "source": [
        "from google.colab import files\n",
        "\n",
        "uploaded = files.upload()\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "\n",
        "df = pd.read_csv(\"winequality-red.txt\", sep=\";\")\n",
        "df.head()\n"
      ],
      "metadata": {
        "id": "HaCNXJMmaKBf"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Exploratory Data Analysis\n",
        "Vsualize feature distributions and correlations to better understand the data."
      ],
      "metadata": {
        "id": "GdUdK4Q4N3ta"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Dataset shape:\", df.shape)\n",
        "print(\"Columns:\", df.columns.tolist())\n",
        "print(\"Missing values:\\n\", df.isnull().sum())\n",
        "\n",
        "df.describe()\n"
      ],
      "metadata": {
        "id": "DBAv6A2xaRAx"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Quality counts:\\n\", df['quality'].value_counts().sort_index())\n",
        "\n",
        "print(\"Average quality:\", df['quality'].mean())\n",
        "\n",
        "print(\"Alcohol vs Quality correlation:\\n\", df[['alcohol','quality']].corr())\n"
      ],
      "metadata": {
        "id": "moZ0PxSHaeVM"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Visualizations\n",
        "\n",
        "# Histogram of wine quality\n",
        "df['quality'].hist(bins=10)\n",
        "plt.xlabel(\"Wine Quality\")\n",
        "plt.ylabel(\"Count\")\n",
        "plt.title(\"Distribution of Wine Quality\")\n",
        "plt.show()\n",
        "\n",
        "# Scatter plot: Alcohol vs Quality\n",
        "df.plot(kind=\"scatter\", x=\"alcohol\", y=\"quality\", alpha=0.5)\n",
        "plt.title(\"Alcohol vs Wine Quality\")\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "vg0U-qECapl4"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Model Training\n",
        "Apply machine learning models (e.g., logistic regression, decision tree) to classify wine.\n"
      ],
      "metadata": {
        "id": "ULuHYN0ZN2Sw"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "model = LogisticRegression(max_iter=5000)\n"
      ],
      "metadata": {
        "id": "SYWAsBC7Q5jj"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import StandardScaler\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "\n",
        "# Features and target\n",
        "X = df.drop('quality', axis=1)\n",
        "y = df['quality']\n",
        "\n",
        "# Scale features\n",
        "scaler = StandardScaler()\n",
        "X_scaled = scaler.fit_transform(X)\n",
        "\n",
        "# Split data\n",
        "X_train, X_test, y_train, y_test = train_test_split(\n",
        "    X_scaled, y, test_size=0.2, random_state=42\n",
        ")\n",
        "\n",
        "# Train model\n",
        "model = LogisticRegression(max_iter=5000)\n",
        "model.fit(X_train, y_train)\n"
      ],
      "metadata": {
        "id": "DiTV3h1gQ9FW"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Model Evaluation\n",
        "Evaluate model performance using accuracy, confusion matrix, and other metrics.\n"
      ],
      "metadata": {
        "id": "RdHEMLzgOglG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import accuracy_score, confusion_matrix, classification_report\n",
        "\n",
        "# Predict on test set\n",
        "y_pred = model.predict(X_test)\n",
        "\n",
        "# Accuracy\n",
        "acc = accuracy_score(y_test, y_pred)\n",
        "print(\"Accuracy:\", acc)\n",
        "\n",
        "# Confusion Matrix\n",
        "cm = confusion_matrix(y_test, y_pred)\n",
        "print(\"Confusion Matrix:\\n\", cm)\n",
        "\n",
        "print(\"\\nClassification Report:\\n\", classification_report(y_test, y_pred))\n"
      ],
      "metadata": {
        "id": "RA0gaJMcRGeZ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Mini Conclusion\n",
        "- Alcohol content seems positively correlated with quality.  \n",
        "- Chemical properties like acidity and pH may influence perceived taste.\n",
        "- The logistic regression model achieved ~57% accuracy, performing best on wines with mid-range quality (5â€“6) and less accurately on extreme ratings (3 and 8).  \n",
        "- Overall, this analysis demonstrates how chemical features can help predict wine quality and provides a baseline for further modeling improvements."
      ],
      "metadata": {
        "id": "nrxUdrAGPCPf"
      }
    }
  ]
}
